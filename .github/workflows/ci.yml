name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-backend:
    name: Backend - Install, Lint, Test, Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cineperu-backend
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Lint (opcional)
        run: |
          if npm run | grep -q 'lint'; then npm run lint; else echo "No lint script"; fi
      - name: Test (opcional)
        run: |
          if npm run | grep -q 'test'; then npm test; else echo "No test script"; fi
        env:
          DATABASE_URL: "postgresql://postgres:zBOEpCmUyJeyrZzzlBLAuFzNNBEhlZSt@metro.proxy.rlwy.net:30708/railway"
      - name: Build
        run: npm run build

  deploy-backend:
    name: Backend Deploy (Render)
    runs-on: ubuntu-latest
    needs: build-backend
    if: success()
    steps:
      - name: Trigger Render Deploy Hook
        run: |
          curl -X POST "https://api.render.com/deploy/srv-d1fkvtili9vc739llhvg?key=1R6wrX75u-s"

  build-frontend:  
    name: Frontend - Install, Lint, Test, Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cineperu-frontend
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Lint (opcional)
        run: |
          if npm run | grep -q 'lint'; then npm run lint; else echo "No lint script"; fi
      - name: Test (opcional)
        run: |
          if npm run | grep -q 'test'; then npm test; else echo "No test script"; fi
      - name: Build
        run: npm run build
  